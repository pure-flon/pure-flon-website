===============================================================
🚀 Pure-Flon 웹사이트 다음 할일 단계별 가이드
업데이트: 2025-07-31
===============================================================

📌 중요: 이 파일을 따라서 차근차근 진행하세요!

===============================================================
1단계: 로컬 개발 환경 설정 (필수)
===============================================================

1-1. Node.js 설치 확인
- https://nodejs.org 에서 최신 LTS 버전 설치
- 터미널에서 확인: node --version (20.0.0 이상이어야 함)
- npm 확인: npm --version (10.0.0 이상이어야 함)

1-2. 프로젝트 폴더에서 의존성 설치
- 터미널에서 프로젝트 폴더로 이동:
  cd C:\Users\choi\Documents\GitHub\pure-flon-website

- 의존성 설치:
  npm install

- 개발 서버 실행 테스트:
  npm run dev

1-3. 환경 변수 설정
- .env.example 파일을 .env.local로 복사
  copy .env.example .env.local

- .env.local 파일을 열어서 필요한 값들 수정:
  * SITE_URL="http://localhost:3000" (로컬 테스트용)
  * 나머지는 일단 그대로 두고 나중에 설정

===============================================================
2단계: Git 저장소 정리 (중요)
===============================================================

2-1. 현재 Git 상태 확인
git status

2-2. 새로 추가된 파일들 확인
- 404.html
- .gitignore
- .eslintrc.js
- .prettierrc
- .env.example
- 업데이트된 README.md, package.json, vercel.json

2-3. Git에 추가 및 커밋 (주의: .env.local은 절대 커밋하지 마세요!)
git add .
git commit -m "feat: 웹사이트 전면 고도화 v3.1.0

- 404 에러 페이지 사용자 친화적 디자인 추가
- .gitignore 보안 강화 및 포괄적 설정
- ESLint/Prettier 코드 품질 관리 도구 구축
- 환경 변수 템플릿(.env.example) 생성
- Vercel 배포 설정 고도화
- README.md 상세 문서화 업데이트
- 의존성 최신화 (Vite 5.3.5, ESLint 9.8.0)

🤖 Generated with Claude Code
Co-Authored-By: Claude <noreply@anthropic.com>"

2-4. GitHub에 푸시
git push origin main

===============================================================
3단계: Vercel 연결 및 배포 (가장 중요!)
===============================================================

3-1. Vercel 계정 생성
- https://vercel.com 접속
- GitHub 계정으로 로그인/회원가입

3-2. Vercel과 GitHub 저장소 연결
1) Vercel 대시보드에서 "New Project" 클릭
2) GitHub 탭에서 "pure-flon-website" 저장소 선택
3) "Import" 클릭
4) Project Name: "pure-flon-website" 입력
5) Framework Preset: "Other" 선택 (중요!)
6) Build and Output Settings:
   - Build Command: npm run build
   - Output Directory: . (점 하나만)
   - Install Command: npm install

3-3. 환경 변수 설정 (Vercel에서)
1) Project Settings → Environment Variables
2) 다음 변수들 추가:
   - NODE_ENV = production
   - SITE_URL = https://pure-flon-website.vercel.app (자동 생성된 URL)
   
3-4. 배포
- "Deploy" 버튼 클릭
- 5-10분 기다리면 자동 배포 완료
- 생성된 URL로 접속해서 확인

3-5. 커스텀 도메인 연결 (선택사항)
- pure-flon.com 도메인이 있다면:
  1) Project Settings → Domains
  2) 도메인 추가
  3) DNS 설정 안내에 따라 네임서버 변경

===============================================================
4단계: 현재 문제 해결 (우선순위)
===============================================================

4-1. 이미지 파일 확인
- /images/ 폴더에 다음 파일들이 있는지 확인:
  * logo.svg
  * og-image-1200x630.webp
  * twitter-card-1200x600.webp
  * favicon.ico
  * apple-touch-icon.png

- 없다면 임시 이미지 생성하거나 placeholder 사용

4-2. API 폴더 구조 확인
- /api/quotes/ 폴더의 파일들이 실제로 작동하는지 확인
- 없다면 임시 파일 생성 또는 vercel.json에서 해당 부분 주석 처리

4-3. 제품 페이지 확인
- /products/medical.html
- /products/semiconductor.html  
- /products/chemical.html
이 파일들이 존재하는지 확인, 없다면 생성 또는 링크 수정

===============================================================
5단계: 테스트 및 검증
===============================================================

5-1. 로컬에서 테스트
npm run dev
- http://localhost:3000 접속
- 모든 링크 클릭해보기
- 모바일 화면으로도 확인 (F12 → 모바일 뷰)

5-2. 배포된 사이트에서 테스트
- Vercel에서 제공된 URL로 접속
- 로딩 속도 확인
- 404 페이지 테스트 (존재하지 않는 URL 접속)

5-3. SEO 도구로 검증
- Google PageSpeed Insights: https://pagespeed.web.dev
- 배포된 URL 입력해서 성능 점수 확인

===============================================================
6단계: 모니터링 및 분석 설정
===============================================================

6-1. Google Analytics 설정
1) https://analytics.google.com 접속
2) 새 속성 생성
3) 측정 ID (G-XXXXXXXXXX) 복사
4) Vercel 환경 변수에 GA_MEASUREMENT_ID 추가

6-2. Google Search Console 설정
1) https://search.google.com/search-console 접속
2) 도메인 또는 URL 속성 추가
3) 소유권 확인

===============================================================
7단계: 다음 개발 계획
===============================================================

🔴 긴급 (1주 내):
- [ ] 누락된 이미지 파일들 업로드
- [ ] 제품 페이지 실제 내용 작성
- [ ] 연락처 폼 실제 작동하도록 구현
- [ ] 견적 요청 폼 백엔드 연결

🟡 중요 (2-4주 내):
- [ ] CSS 현대화 (Grid/Flexbox 활용)
- [ ] JavaScript ES6+ 리팩토링
- [ ] 이미지 WebP/AVIF 변환
- [ ] 실제 회사 정보로 내용 교체

🟢 장기 (1-3개월):
- [ ] TypeScript 도입
- [ ] React/Next.js 전환 고려
- [ ] 실시간 채팅 기능
- [ ] 고객 포털 시스템

===============================================================
🚨 문제 발생시 해결 방법
===============================================================

문제 1: npm install 실패
해결: 
- Node.js 재설치 (LTS 버전)
- npm cache clean --force
- node_modules 폴더 삭제 후 다시 npm install

문제 2: Vercel 배포 실패
해결:
- vercel.json 파일 문법 확인
- Build 명령어 확인 (npm run build)
- 환경 변수 올바른지 확인

문제 3: 404 에러 많이 발생
해결:
- 실제 파일 경로와 링크가 일치하는지 확인
- vercel.json의 redirects 설정 확인

문제 4: 이미지가 안 보임
해결:
- 파일 경로 확인 (/images/파일명)
- 파일 확장자 정확히 입력
- 이미지 파일이 실제로 업로드되었는지 확인

===============================================================
📞 도움이 필요할 때
===============================================================

1. GitHub Issues에 문제 등록
2. Vercel 공식 문서: https://vercel.com/docs
3. Node.js 공식 문서: https://nodejs.org/docs

===============================================================
✅ 체크리스트 (완료하면 ✅ 표시)
===============================================================

로컬 환경:
[ ] Node.js 설치 완료
[ ] npm install 성공
[ ] npm run dev 로컬 실행 성공
[ ] .env.local 파일 생성

Git 관리:
[ ] 새 파일들 git add 완료
[ ] 의미있는 커밋 메시지로 커밋
[ ] GitHub에 푸시 완료

Vercel 배포:
[ ] Vercel 계정 생성
[ ] GitHub 저장소 연결
[ ] 첫 번째 배포 성공
[ ] 배포된 URL 정상 접속 확인

테스트:
[ ] 메인 페이지 로딩 확인
[ ] 404 페이지 작동 확인  
[ ] 모바일 뷰 확인
[ ] 링크들 작동 확인

===============================================================

💡 팁: 한 번에 모든 걸 완벽하게 하려고 하지 마세요!
     단계별로 하나씩 확인하면서 진행하는 것이 좋습니다.

💪 화이팅! 궁금한 점이 있으면 언제든 물어보세요.

===============================================================